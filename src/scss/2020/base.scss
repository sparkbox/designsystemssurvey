//    Introduction
//    Welcome to the CSS file! This is subjectively the most exciting code
//    of the website. Here we bring together the visual style of the website.
//
//    Our CSS is organized using Harry Roberts' (csswizardry.com) Inverted
//    Triangle CSS (ITCSS) organizational approach. This method is mixed with
//    Block Element Modifier (BEM) naming convention for class names throughout
//    the stylesheet.
//
//    Table of Contents:
// 1. Settings
// 2. Tools
// 3. Generic
// 4. Elements
// 5. Objects
// 6. Components
// 7. Utilities

// =====================================================================
// 1. Settings
//    When using a preprocessor, settings are used to define variable.
//    This puts variables at the top of the cascade so they are accessible
//    to all partials further down. No CSS selectors should be generated
//    by the preprocessor from partials in this section.

//    When not using a preprocessor, the settings area is a good place
//    to write comments describing the colors and font stacks as a guide.
//    If using features such as custom properties, those that are global
//    custom properties should be described in this section.
@import "settings/colors";
@import "settings/fonts";
@import "settings/variables";

// =====================================================================
// 2. Tools
//    This section is specifically for preprocessor global mixins and
//    functions. No CSS should be generated by the preprocessor from
//    partials in this section.
@import "tools/mixins";
@import "tools/functions";
@import "tools/svgs";
@import "tools/fonts";
@import "tools/spacing-mixins";


// =====================================================================
// 3. Generic
//    Here we define any generic styles that are not specific to the styles of
//    the site. This section should include any Reset or Normalize libraries
//    and any preferential base styles for elements. There shouldnâ€™t be any
//    classes or ids used in this section.
@import "generic/normalize";
@import "generic/fonts";
@import "generic/safe-focus";


// =====================================================================
// 4. Elements
//    Styling for bare HTML elements (like H1, A, etc.). These come with
//    default styling from the browser so we can redefine them here.
@import "elements/body";
@import "elements/a";
@import "elements/hx";
@import "elements/p";
@import "elements/hr";
@import "elements/table";
@import "elements/lists";
@import "elements/blockquote";


// =====================================================================
// 5. Objects
//    Class-based selectors which define undecorated design patterns,
//    for example media object known from OOCSS.
@import "objects/grid";
@import "objects/layout";
@import "objects/section-header";


// =====================================================================
// 6. Components
//    Specific UI components. This is where majority of our work takes place
//    and our UI components are often composed of Objects and Components
@import "components/site-header";
@import "components/section-header";
@import "components/icons";
@import "components/aside";
@import "components/toc";
@import "components/nav";
@import "components/hr";
@import "components/chart-section";
@import "components/chart";
@import "components/chart-range";
@import "components/chart-table";
@import "components/chart-key";
@import "components/answer";
@import "components/site-footer";
@import "components/sections";
@import "components/intersect";
@import "components/input";
@import "components/button";
@import "components/list-split";


// =====================================================================
// 8. Utilities
//    Utilities and helper classes with ability to override anything
//    which goes before in the triangle, eg. hide helper class
@import "utilities/spacing";
@import "utilities/color";
@import "utilities/gradient";
@import "utilities/display";
@import "utilities/fonts";
@import "utilities/text";
