// General mixins

@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// Auto-generates media queries for looping content
@mixin loop-mq {
  @content;
  @each $key, $val in $breakpoints {
    @media (min-width: #{$val}) {
      &\@#{$key} {
        @content;
      }
    }
  }
}

@mixin print($type:null) {
  @if $type == all {
    @media print {
      -webkit-print-color-adjust: exact !important; // Chrome, Safari
      color-adjust: exact !important; // Firefox
    }
  }
  @else if $type == none {
    @media print {
      display: none !important;
    }
  }
  @else {
    @media print {
      @content;
    }
  }
}

@mixin unbuttonize {
  // This removes styles added by default to button elements.
  // For when something should semantically be a button,
  // but isn't buttony in appearance.
  background-color: transparent;
  border: none;
  margin: 0;
  padding: 0;
  text-align: inherit;
  font: inherit;
  border-radius: 0;
  appearance: none; // Just in case we missed anything.
}

@mixin delist {
  // This removes default list styles
  list-style: none;
  padding: 0;
  margin: 0;
}

@mixin unlink {
  text-decoration: none;
  color: inherit;
}

@mixin visually-hidden($status:null) {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); // IE6, IE7
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;

  @if $status == 'disable' {
    position: static !important;
    clip: unset !important;
    padding: 0 !important;
    border: 0 !important;
    height: auto !important;
    width: auto !important;
    overflow: visible;
  }
}

@mixin focus-styles {
  // Disable native outline since we're drawing our own via box-shadow
  outline: none;

   html.safe-focus & {
    // This draws a doubled-up border, which is white and black. This is to ensure
    // it's visible on all backgrounds. It's marked as !important so this focus
    // state takes effect even when used on elements with higher-specificity
    // box-shadows applied to them. And because focus states are important. :)
    box-shadow:
      0 0 0 2px $white,
      0 0 0 4px $black !important;
  }
}
