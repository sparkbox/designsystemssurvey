.cmp-cube {
  height: 100%;
  width: 100%;
  background: svg('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84" ><rect fill="#{mix($yellow, $black, 20%)}" stroke="#{$yellow}" stroke-width="3px" vector-effect="non-scaling-stroke" x="0" y="0" height="84" width="84" /></svg>') no-repeat left center / contain;

  @supports(transform-style: preserve-3d) {
    --rotate: 45deg;

    height: var(--size);
    width: var(--size);
    background: none;
    position: relative;
    margin: 0 calc(var(--size) * 0.1);
    filter: drop-shadow(0 0 0.25rem rgba($yellow, 0.5));
    pointer-events: none;

    .cmp-respondents--animated & {
      animation: cube-pulse 1s ease-in-out alternate infinite;
    }


    &__shape {
      height: var(--size);
      width: var(--size);
      position: absolute;
      top: calc(var(--size) * -0.5);
      transform-style: preserve-3d;
      backface-visibility: visible;
      transform-origin: center;
      transform:
        rotateX(var(--shape-angle))
        rotateZ(var(--rotate))
      ;
      perspective-origin: center;

      .cmp-respondents--animated & {
        animation: cube-spin var(--shape-animation-duration) linear infinite;
      }
    }

    &__side {
      height: var(--size);
      width: var(--size);
      position: absolute;
      background: svg('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 84 84" ><rect fill="#{mix($yellow, $black, 20%)}" stroke="#{$yellow}" stroke-width="3px" vector-effect="non-scaling-stroke" x="0" y="0" height="84" width="84" /></svg>') no-repeat center / contain;

      &--2 {
        top: 100%;
        transform: rotateX(-90deg);
        transform-origin: top center;
      }

      &--3 {
        bottom: 100%;
        transform: rotateX(90deg);
        transform-origin: bottom center;
      }

      &--4 {
        left: 100%;
        transform: rotateY(90deg);
        transform-origin: left center;
      }

      &--5 {
        right: 100%;
        transform: rotateY(-90deg);
        transform-origin: right center;
      }

      &--6 {
        transform: translateZ(calc(var(--size) * -1));
        transform-origin: center center;
      }
    }
  }
}


@keyframes cube-spin {
  to {
    transform:
      rotateX(var(--shape-angle))
      rotateZ(calc(var(--rotate) + 360deg));
  }
}

@keyframes cube-pulse {
  to {
    filter: drop-shadow(0 0 0.5rem rgba($yellow, 0.75));
  }
}
